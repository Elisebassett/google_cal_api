c
service.update_event('primary', event.id, event)
event.update!(extended_properties: {private: {foo: 'asdf'}})
event.summary
event
c
ep.private['foo']
ep.private
ep[:foo]
ep = event.extended_properties
event.extended_properties
event
c
service.update_event('primary', event.id, event)
event.update!(extended_properties: {private: {foo: 'asdf'}})
service.update_event('primary', event.id, event)
event.update!(extended_properties: {private: 'asdf'})
event
service
c
event.updated
event.update!(extended_properties: {private: 'asdf'})
event
c
event.update!(:extended_properties => {'foo' => 'bar'})
event.update!('extendedProperties.private' => {'foo' => 'bar'})
event.update('extendedProperties.private' => {'foo' => 'bar'})
c
event.status
event.state
event.update!
event.extended_properties={foo: 'bar'}
event.public_methods.grep /upd/
event.public_methods.grep /pub/
event.public_methods.grep /save/
event.public_methods /save/
event.public_methods /save
c
l
event.extended_properties
event.extended_properties={foo: 'bar'}
event.extended_properties
event.public_methods.grep /extended/
event.public_methods
event.instance_variables
event
c
scope
n
@client_id.id
data.fetch('client_id')
data
n
stored_token(user_id)
user_id
s
authorizer
